name: Terraform Deployment Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Entorno a desplegar'
        required: true
        default: 'dev'
        type: choice
        options: [dev, prod]
      auto_approve:
        description: 'Aprobar automáticamente?'
        required: false
        default: 'false'
        type: boolean

env:
  AWS_REGION: us-west-1

jobs:
  validate-and-plan:
    name: Validate, Lint & Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./environments/${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Verify Environment Directory
        run: |
          if [ ! -d "environments/${{ github.event.inputs.environment }}" ]; then
            echo "❌ Directorio no encontrado"; exit 1
          fi

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3 :contentReference[oaicite:7]{index=7}
        with: {}

      - name: Terraform fmt & validate
        run: |
          terraform fmt -recursive
          terraform validate

      - name: Install TFLint
        uses: terraform-linters/tflint-action@v3.0.0 :contentReference[oaicite:8]{index=8}
        with:
          config_file: .tflint.hcl

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4.4.0 :contentReference[oaicite:9]{index=9}
        with:
          name: tfplan-${{ github.event.inputs.environment }}
          path: tfplan

  security-scans:
    name: Security Scanning
    needs: validate-and-plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./environments/${{ github.event.inputs.environment }}
    steps:
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4.4.0 :contentReference[oaicite:10]{index=10}
        with:
          name: tfplan-${{ github.event.inputs.environment }}

      - name: Run tfsec on Plan (tabla)
        uses: aquasecurity/tfsec-action@v1.1.0 :contentReference[oaicite:11]{index=11}
        with:
          plan: tfplan
          format: table
          output: tfsec-results.txt
          exit-code: '1'

      - name: Upload tfsec Report
        uses: actions/upload-artifact@v4.4.0
        with:
          name: tfsec-report-${{ github.event.inputs.environment }}
          path: tfsec-results.txt

      - name: Run Checkov on Plan (SARIF)
        uses: bridgecrewio/checkov-action@v12 :contentReference[oaicite:12]{index=12}
        with:
          directory: .
          framework: terraform
          output_format: sarif
          output_file: checkov.sarif

      - name: Upload Checkov Report
        uses: actions/upload-artifact@v4.4.0
        with:
          name: checkov-report-${{ github.event.inputs.environment }}
          path: checkov.sarif

  terraform-apply:
    name: Terraform Apply
    if: ${{ github.event.inputs.environment == 'prod' && github.event.inputs.auto_approve == 'true' }}
    needs: security-scans
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./environments/${{ github.event.inputs.environment }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4.4.0

      - name: AWS Login (OIDC)
        uses: aws-actions/configure-aws-credentials@v4 :contentReference[oaicite:13]{index=13}
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan
