name: Terraform Deployment Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Entorno a desplegar"
        required: true
        default: "dev"
        type: choice
        options: [dev, prod]
      auto_approve:
        description: "Aprobar automáticamente (solo para dev)"
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: us-west-1
  TERRAFORM_PLAN_JSON_FILE: tfplan.json

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  terraform-validation:
    name: "Validate & Plan & Cost Analysis"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify environment directory
        run: |
          echo "Entorno seleccionado: ${{ github.event.inputs.environment }}"
          ls -la environments/${{ github.event.inputs.environment }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./environments/${{ github.event.inputs.environment }}
        run: terraform init -input=false

      - name: Terraform Format Check
        working-directory: ./
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: ./environments/${{ github.event.inputs.environment }}
        run: terraform validate

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Initialize TFLint plugins
        working-directory: ./
        run: tflint --init

      - name: Run TFLint for Log Output
        working-directory: ./
        run: tflint --config=.tflint.hcl --recursive

      - name: Terraform Plan and Convert to JSON
        working-directory: ./environments/${{ github.event.inputs.environment }}
        run: |
          terraform plan \
            -input=false \
            -var-file=terraform.tfvars \
            -out=tfplan.binary 
          
          terraform show -json tfplan.binary > ${{ env.TERRAFORM_PLAN_JSON_FILE }}
          
          ls -l ${{ env.TERRAFORM_PLAN_JSON_FILE }}

      - name: Upload Terraform Plan JSON
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-json-${{ github.event.inputs.environment }}
          path: ./environments/${{ github.event.inputs.environment }}/${{ env.TERRAFORM_PLAN_JSON_FILE }}

      # --- Infracost Cost Analysis ---
      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost Breakdown
        # El working-directory se establece para que --path . se refiera al directorio del entorno
        # y --plan-path pueda ser solo el nombre del archivo JSON.
        working-directory: ./environments/${{ github.event.inputs.environment }}
        run: |
          # Genera el desglose en formato JSON y lo guarda en la raíz del workspace
          infracost breakdown --path . \
            --plan-path ${{ env.TERRAFORM_PLAN_JSON_FILE }} \
            --format json \
            --out-file ../../infracost-report-${{ github.event.inputs.environment }}.json \
            --show-skipped # Opcional: muestra recursos omitidos por Infracost
          
          echo "--- Infracost Cost Estimation Summary (Table) ---"
          # Muestra el desglose en formato de tabla en el log
          infracost breakdown --path . \
            --plan-path ${{ env.TERRAFORM_PLAN_JSON_FILE }} \
            --format table \
            --show-skipped

      - name: Upload Infracost Breakdown Report
        uses: actions/upload-artifact@v4
        with:
          name: infracost-report-${{ github.event.inputs.environment }}
          # La ruta es relativa a la raíz del workspace
          path: infracost-report-${{ github.event.inputs.environment }}.json

  security-scans:
    name: "Security Scans"
    needs: terraform-validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Terraform Plan JSON
        uses: actions/download-artifact@v4
        with:
          name: tfplan-json-${{ github.event.inputs.environment }}
          path: ./environments/${{ github.event.inputs.environment }}

      - name: Run tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          working_directory : ./environments/${{ github.event.inputs.environment }}
          sarif_file: tfsec-results.sarif

      - name: Upload tfsec results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec-results.sarif

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          file: ./environments/${{ github.event.inputs.environment }}/${{ env.TERRAFORM_PLAN_JSON_FILE }}
          framework: terraform_plan 
          output_format: sarif
          output_file_path: checkov.sarif 
          soft_fail: true 

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov.sarif/results_sarif.sarif